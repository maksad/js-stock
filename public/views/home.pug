extends layout.pug

block content
  include _message.pug
  style.
    #container {
      height: 400px;
      min-width: 310px;
      margin-top: 20px;
    }

    .tags-wrapper {
      background: #f7f7f7;
      padding: 10px 20px;
      margin: 22px 0px 0px;
      width: 100%;
    }

    form {
      position: relative;
    }

    form button {
      position: absolute;
      right: 0;
      bottom: 23px;
      width: 70px;
      height: 30px;
      background: #e4e4e4;
      border: none;
      text-transform: uppercase;
      color: #5b5b5b;
    }

  #container(style='height: 400px; min-width: 310px')

  .tags-wrapper
    ul#names
    form(action='')
      input#stock(autocomplete='off')
      button add

  script(src='https://code.highcharts.com/stock/highstock.js')
  script(src='https://code.highcharts.com/stock/modules/exporting.js')

  script(src='/socket.io/socket.io.js')
  script(src='https://code.jquery.com/jquery-1.11.1.js')
  script(src='socket.io/socket.io.js')

  script.
    function drawStocksChart(names) {
      var seriesOptions = [];
      var seriesCounter = 0;

      function createChart() {
        Highcharts.stockChart('container', {
          rangeSelector: {
            selected: 4
          },

          yAxis: {
            labels: {
              formatter: function () {
                return (this.value > 0 ? ' + ' : '') + this.value + '%';
              }
            },
            plotLines: [{
              value: 0,
              width: 2,
              color: 'silver'
            }]
          },

          plotOptions: {
            series: {
              compare: 'percent',
              showInNavigator: true
            }
          },

          tooltip: {
            pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> ({point.change}%)<br/>',
            valueDecimals: 2,
            split: true
          },

          series: seriesOptions
        });
      }

      $.each(names, function (i, name) {
        var url = 'https://www.highcharts.com/samples/data/jsonp.php?filename=' + name.toLowerCase() + '-c.json&callback=?';

        $.getJSON(url, function (data) {
          seriesOptions[i] = {
            name: name,
            data: data
          };
          seriesCounter += 1;
          if (seriesCounter === names.length) {
            createChart();
          }
        });
      });
    }

  script.
    var socket = io();

    $(initSocket);

    function initSocket() {
      window.names = [];
      $('form').submit(onFormSubmitEmitChanges);
      socket.on('stock change', renderStockName);
    }

    function onFormSubmitEmitChanges() {
      var stock = $('#stock').val();
      stock = stock.toUpperCase();

      if (!window.names.includes(stock)) {
        var newNames = window.names.slice();
        newNames.push(stock);
        socket.emit('stock change', newNames);
        $('#stock').val('');
        return false;
      }
    }

    function renderStockName(names) {
      sortedNames = names ? names.sort() : [];
      windowNames = window.names.sort();
      if (sortedNames.toString() != windowNames.toString()) {
        window.names = names;
        drawStocksChart(names);
        addNamesToUI(names);
      }
    }

    function addNamesToUI(names) {
      $('#names .chip').remove();

      for(var name of names) {
        $('#names')
          .append(
            $('<div class="chip">' + name + '<i class="close material-icons">close</i></div>')
          );
      }
    }
